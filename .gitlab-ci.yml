stages:
  - prepare
  - lint
  - build
  - deploy

variables:
  LC_ALL: "en_US.UTF-8"
  PILOT_USERNAME: ${CI_PILOT_USERNAME}
  SIGH_USERNAME: ${CI_SIGH_USERNAME}

cache:
  key: "bundle_dependencies"
  paths:
  - vendor
  - Pods

.setup: &setup
  - rvm --create use $(cat .ruby-version)@${CI_PROJECT_NAME}
  - bundle config
  - bundle install
  - bundle exec pod cache clean --all
  - bundle exec pod install || bundle exec pod install --repo-update

.rvmuse: &rvmuse
  - rvm use $(cat .ruby-version)@${CI_PROJECT_NAME}

prepare_project:
  stage: prepare
  script:
    - mkdir -p Configuration
    - envsubst < Configuration/env_debug.xcconfig.tpl > Configuration/Debug.xcconfig
    - envsubst < Configuration/env_stage.xcconfig.tpl > Configuration/Stage.xcconfig
    - envsubst < Configuration/env_release.xcconfig.tpl > Configuration/Release.xcconfig
  after_script:
    *setup
  artifacts:
    name: "Bundle_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 day
    paths:
      - vendor/*
      - Pods/*
      - Configuration/*
      - TimeTable.xcworkspace
  when: on_success
  tags:
    - ios

lint:
  stage: lint
  before_script:
    *rvmuse
  script:
    - bundle exec fastlane check_style
  dependencies:
    - prepare_project
  artifacts:
    name: "Lint_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 week
    paths:
    - output/lint/*
  tags:
    - ios

test_project:
  stage: build
  before_script:
    *rvmuse
  script:
    - bundle exec fastlane test
  after_script:
    - killall "Simulator" || true
  dependencies:
    - prepare_project
  artifacts:
    name: "Tests_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 week
    paths:
    - output/tests/*
  when: on_success
  tags:
    - ios_simulator
  coverage: '/Test\ Coverage:\ \D*([\d\.]*)\%/'

build:
  stage: build
  environment:
    name: Release
  before_script:
    *rvmuse
  script:
    - bundle exec fastlane build_ipa
  after_script:
    - killall "Simulator" || true
  dependencies:
    - prepare_project
  artifacts:
    name: "Build_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 week
    paths:
    - output/${CI_PROJECT_NAME}/prod/*
  when: on_success
  tags:
    - ios

deploy_stage:
  stage: deploy
  before_script:
    *rvmuse
  script:
    - bundle exec fastlane deploy_stage
  dependencies:
    - prepare_project
  artifacts:
    name: "QA_${CI_PROJECT_NAME}_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 week
    paths:
    - output/TimeTable/stage/*
  when: on_success
  only:
    - develop
  tags:
    - ios

deploy_testflight:
  stage: deploy
  environment:
    name: Release
  before_script:
    *rvmuse
  script:
    - bundle exec fastlane deploy_testflight
  dependencies:
    - build
  artifacts:
    name: "${CI_PROJECT_NAME}_Prod_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 week
    paths:
      - output/${CI_PROJECT_NAME}/prod/*
  when: on_success
  only:
    - /v[\d\.]*\-rc\d+/
  tags:
    - ios
