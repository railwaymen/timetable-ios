stages:
  - prepare
  - build
  - deploy

variables:
  LC_ALL: "en_US.UTF-8"
  PILOT_USERNAME: ${CI_PILOT_USERNAME}
  SIGH_USERNAME: ${CI_SIGH_USERNAME}

cache:
  key: "bundle_dependencies"
  paths:
  - vendor

.setup: &setup
  - export
  - rvm --create use ruby-2.6.3@timetable-ios
  - gem install bundler:2.1.4
  - bundle config set path 'vendor/bundle'
  - bundle install
  - bundle exec pod cache clean --all
  - bundle exec pod install || bundle exec pod install --repo-update

prepare_proj:
  stage: prepare
  script:
    - mkdir -p Configuration
    - envsubst < Configuration/env_debug.xcconfig.tpl > Configuration/Debug.xcconfig
    - envsubst < Configuration/env_stage.xcconfig.tpl > Configuration/Stage.xcconfig
    - envsubst < Configuration/env_release.xcconfig.tpl > Configuration/Release.xcconfig
  after_script:
    *setup
  artifacts:
    name: "Bundle_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 day
    paths:
      - vendor/*
      - Pods/*
      - Configuration/*
      - TimeTable.xcworkspace
  when: on_success
  tags:
    - ios

test_project:
  stage: build
  before_script:
    *setup
  script:
    - bundle exec fastlane test
  after_script:
    - killall "Simulator" || true
  artifacts:
    name: "Tests_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 week
    paths:
    - output/tests/*
    - output/coverage/*
    - output/lint/*
    when: on_success
  tags:
    - ios_simulator
  coverage: '/Test\ Coverage:\ \D*([\d\.]*)\%/'

deploy_stage:
  stage: deploy
  before_script:
    *setup
  script:
    - bundle exec fastlane deploy_stage
  artifacts:
    name: "QA_${CI_PROJECT_NAME}_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}_${CI_BUILD_ID}"
    expire_in: 1 week
    paths:
    - output/TimeTable/stage/*
  when: on_success
  only:
    - develop
    - /release/v[\d\.]*/
  tags:
    - ios
